import { Injectable } from '@angular/core';
import { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';
import { LoginService } from './features/auth/service/login.service';

@Injectable({
  providedIn: 'root'
})
export class AuthGuard implements CanActivate {

  constructor(private loginService: LoginService, private router: Router) {}

  canActivate(route: ActivatedRouteSnapshot): boolean {
    const expectedRole = route.data['role'];  // ‡∏≠‡πà‡∏≤‡∏ô role ‡∏à‡∏≤‡∏Å route config
    const userRole = this.loginService.getUserRole(); // ‡∏≠‡πà‡∏≤‡∏ô role ‡∏à‡∏≤‡∏Å token

    console.log('üîê Expected Role:', expectedRole);
    console.log('üë§ User Role:', userRole);
    console.log('üîë Logged in:', this.loginService.isLoggedIn());

    // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡∏£‡∏∞‡∏ö‡∏∏ role ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô route ‡πÉ‡∏´‡πâ‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢ (‡∏≠‡∏≤‡∏à‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏ô‡πâ‡∏≤ public)
    if (!expectedRole) {
      return true;
    }

    if (this.loginService.isLoggedIn() && userRole === expectedRole) {
      return true;
    } else {
      this.router.navigate(['/login']); // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå redirect ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ login
      return false;
    }
  }
}
